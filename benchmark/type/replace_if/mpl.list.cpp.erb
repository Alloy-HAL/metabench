// Copyright Bruno Dutra 2016
// Distributed under the Boost Software License, Version 1.0.
// (See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)

<% if n > 20 %>
    #define BOOST_MPL_CFG_NO_PREPROCESSED_HEADERS
    #define BOOST_MPL_LIMIT_LIST_SIZE <%= ((n + 9) / 10) * 10 %>
<% end %>

#include <boost/mpl/list.hpp>
#include <boost/mpl/replace_if.hpp>
#include <boost/mpl/int.hpp>
namespace mpl = boost::mpl;


template <int> struct x;

struct is_odd
{
    template<typename>
    struct apply;

    template<int i>
    struct apply<x<i>>
        : mpl::int_<i%2>
    {};
};

using xs = mpl::list<<%= (1..n).map { |i| "x<#{i}>" }.join(', ') %>>;

#if defined(METABENCH)
using result = mpl::replace_if<xs, is_odd, void>::type;
#endif

int main() { }
