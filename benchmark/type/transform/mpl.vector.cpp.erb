// Copyright Louis Dionne 2016
// Distributed under the Boost Software License, Version 1.0.
// (See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)

<% if n > 20 %>
    #define BOOST_MPL_CFG_NO_PREPROCESSED_HEADERS
    #define BOOST_MPL_LIMIT_VECTOR_SIZE <%= ((n + 9) / 10) * 10 %>
<% end %>

#include <boost/mpl/quote.hpp>
#include <boost/mpl/transform.hpp>
#include <boost/mpl/vector.hpp>
namespace mpl = boost::mpl;


template <typename X>
struct f { typedef X type; };

template <int> struct x;

using xs = mpl::vector<<%= (1..n).map { |i| "x<#{i}>" }.join(', ') %>>;

#if defined(METABENCH)
using result = mpl::transform<xs, mpl::quote1<f>>::type;
#endif

int main() { }
