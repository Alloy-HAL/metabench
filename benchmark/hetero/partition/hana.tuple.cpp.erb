// Copyright Louis Dionne 2013-2016
// Distributed under the Boost Software License, Version 1.0.
// (See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)

#include <boost/hana/equal.hpp>
#include <boost/hana/integral_constant.hpp>
#include <boost/hana/mod.hpp>
#include <boost/hana/partition.hpp>
#include <boost/hana/tuple.hpp>
namespace hana = boost::hana;


struct is_even {
    template <typename N>
    constexpr auto operator()(N n) const {
        return n % hana::int_<2>{} == hana::int_<0>{};
    }
};

int main() {
    constexpr auto tuple = hana::make_tuple(
        <%= (1..n).map { |i| "hana::int_<#{i}>{}" }.join(', ') %>
    );

#if defined(METABENCH)
    constexpr auto result = boost::hana::partition(tuple, is_even{});
#endif
}
